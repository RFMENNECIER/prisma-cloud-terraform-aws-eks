name: Deploy Infrastructure

on:
  # push:
  #  branches:
  #    - main
  workflow_dispatch:
    inputs:
      AWS_REGION:
        description: 'AWS region in which to deploy the infrastructure'
        required: true
        default: 'eu-west-3'
      PRISMA_API_URL:
        description: 'Prisma Cloud API URL'
        required: true
        default: 'https://api2.eu.prismacloud.io'
      NAME_PREFIX:
        description: 'Prisma Cloud API URL'
        required: true
        default: 'cley'
      WORKER_NODES_NUMBER:
        description: 'Number of worker nodes in the eks_cluster'
        required: true
        type: choice
        options:
        - 1
        - 2
        - 3
        - 4
        - 5
        default: '3'
      WORKER_NODES_TYPE:
        description: 'Number of worker nodes in the eks_cluster'
        required: true
        default: 't3.medium'     

jobs:
  terraform:
    name: Deploy EKS Cluster
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Run Prisma Cloud 
      id: Prisma_Cloud
      uses: bridgecrewio/checkov-action@master 
      env:
        PRISMA_API_URL: ${{ github.event.inputs.PRISMA_API_URL }}
      with:
        api-key: ${{ secrets.BC_API_KEY }}
        quiet: true
        use_enforcement_rules: true
        framework: terraform
        output_format: cli
        directory: .
        download_external_modules: false 

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.1.9
        terraform_wrapper: false

    - name: Terraform Init
      id: init
      run: terraform init
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./terraform/eks_cluster
      shell: bash 

    - name: Terraform Validate
      id: validate
      run: terraform validate
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./terraform/eks_cluster
      shell: bash 

    - name: Terraform Apply
      id: apply
      run: |
        terraform apply -var region=${{ github.event.inputs.AWS_REGION }}-var name_prefix=${{ github.event.inputs.NAME_PREFIX }} -var region=${{ github.event.inputs.AWS_REGION }}  -var worker_nodes_desired_size=${{ github.event.inputs.WORKER_NODES_NUMBER }} -var worker_nodes_type=${{ github.event.inputs.WORKER_NODES_TYPE }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./terraform/eks_cluster
      shell: bash 